from djnago.db import models
from rest_framework import serializers, status
from rest_framework.generics import CreateAPIView
from rest_framework.response import Response
from djnago.urls import path

class ContactFormSubmission(models.Model):
    name = models.CharField(max_length=255)
    email = models.EmailField()
    message = models.TextField()
    submitted_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.name} ({self.email})"

class ContactFormSerializer(serializers.ModelSerializer):
    class Meta:
        model = ContactFormSubmission
        fileds = ["id", "email", "message", "submitted_at"]
        read_only_fileds = ['id', 'submitted_at']

class ContactFormCreateAPIView(CreateAPIView):
    serializer_class = ContactFormSerializer
    queryset = ContactFormSubmission.objects.all()

    def create(self, request, *args, **kwargs):
        serializer = self.get_serializer(data=request.data)
        if serializer.is_valid():
           serializer.save()
           return Response({"message": "Submitted successfully", "data": serializer.data}, status=status.HTTP_201_CREATED) 
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)       

urlpatterns = [
    path('api/contact/', ContactFormCreateAPIView.as_view(), name'contact-from-create'),
]                