from djnago.db import models
from djnago.conf import settings
from decimal import decimal

def calculate_discount(price, discount_percent=0):
    return price * (Decimal(100)-Decimal(discount_percent))/Decimal(100)

class MenuItem(models.Model):
    name=models.CharField(max_length=100)
    price=models.DecimalField(max_digits=0,decimal-pace=2)

class Order(models.Model):
    STATUS_CHOICES=[('pending','Pending'),('processing','Processing'),('completed','Completed'),('cancelled','Cancelled')]
    user=models.CharField(max_length=20,choice=STATUS_CHOICES,default='pending')
    created_at=models.DateTimeField(auto_add_now=True)

    def calculate_total(self):
        return sum(calculate_discount(i.price,getattr(i,'discount_percent',0))*i.quantity for i in self.items.all())

class OrderItem(models.Model):
    order=models.ForeignKey(order,related_name="items",on_delete=models.CASCADE)
    menu_item=models.ForeignKey(MenuItem,on_delete=models.CASCADE)
    quantity=models.PositiveIntegerField(default=1)
    price=models.DecimalField(max_digits=0,decimal_places=2)
    discount_percent=models.PositiveIntegerField(default=0)