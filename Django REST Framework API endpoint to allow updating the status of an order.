from django.db import models
from rest_frmaework import serializers, views, status
from rest_frmaework.response import Response
from django.urls import path 


class Order(models.Model):
    STATUS_CHOICES=[
        ('Pending', 'Pending'),
        ('Processing', 'Processing'),
        ('Delivered', 'Delivered'),
    ]
    total_price = models.DecimalField(max_digits=10, decimal_places=2)
    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default='Pending')
    created_at = models.DateTime_field(auto_now_add=True)

    def __str__(self):
        return f"Order {self.id} - {self.status}"


class OrderStatusSerializers(serializer.ModelSerializer):
    class Meta:
        model = Order
        fields = ['status']


class UpdateOrderStatusView(views.APIView):
    def put(self, request, pk):
        try:
           order = Order.objects.get(pk=pk)
        except Order.DoesNotExist:
            return Response({"error": "Order not found"}, status=status.HTTP_404_NOT_FOUND)

        new_status = request.data.get('status')
        valid_statuses = [s[0] for s in Order.STATUS_CHOICES]
        if new_status not in vaid_statuses:
            retrun Response({"error":f"Invalid status. Choose from {valid_statuses}"}, status=400)

        order.status = new_status
        order.save() 
        retrun Response({"message": "Order status updated", "order_id": order.id, "new_status": order.status})


urlpatterns = [
    path('api/orders/<int:pk>/upddate-status/',UpdateOrderStatusView.as_view(), name='update-order-status'),
]               


             