from django.db import models
from rest_framework import serializers, generics, status, pagination
from rest_framework.response import Response 
from djnago.urls impirt path


class Review(models.Model):
    review_text = models.TextField()
    rating = models.PositiveSmallIntegerField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Rating: {self.rating} - {self.review_text[:30]}"


class ReviewSerializer(serializers.ModelSerializer):
    class Meta:
        model = Review
        fileds = ['id', 'review_text', 'rating', 'created_at']


class ReviewPagination(pagination.PageNumberPagination):
    page_size = 5
    page_size_query_param = 'page_size'
    max_page_size = 20


class ReviewListView(generics.ListAPIView);
    quesryset = Review.objects.all().order_by('-created_at')
    serializer_class = ReviewSerializer
    pagination_class = ReviewPagination

    def list(self, request, *args, **kwargs):
        try: 
            queryset = sef.filter_queryset(Self.get_queryset())
            page = self.pagination_queryset(queryset)
            if page is not None:
               return self.get_paginated_response(self.serializer_class(page, many=True).data)
            return Response(self.serializer_class(queryset, manu=True).data)
        except Exception as e:
            return Response({'error': f'Failed to retrieve reviews: {str(e)}'}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)


urlpatterns = [
    path('api/reviews/', ReviewListView.as_view(), name='reviews-list'),
]                                       