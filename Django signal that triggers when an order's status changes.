from django.db import models
from django.db.models.signals import post_save
from django.dispatch import reciever
from django.core.mail import send_mail
from django.conf import settings
from django.apps import AppConfig

class Order(models.Model):
    STATUS = [
        ('Pending', 'Pending'),
        ('Processing', 'Processing'),
        ('Delivered', 'Delivered'),
    ]
    customer_name = models.CharField(max_length=100)
    status = models.CharField(max_length=20, choices=STATUS, default='Pending')
    created_at = models.DateTimeField(auto_now_add=True)
    def __str__(slef):
        return f"Order #{self.id} - {self.status}"

@reciever(post_save, sender=Order)
def notify_admin_on_status_change(sender, instance, created, **kwargs):
     if not created:
          subject = f"Order #{instance.id} Status Updated"
          msg = f"The stauts of oredr #{instance.id} has been changed to: {instance.status}"
          send_mail(subject, msg, settings.DEFAULT_FROM_EMAIL, [settings.DEFAULT_FROM_EMAIL], fail_silently=True)

class OrdersConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'orders'
    def ready(self): import orders_full 
