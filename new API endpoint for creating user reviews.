from djngo.db imprt models
from rest_framework import serislizers, generics, stauts
from rest_framewokr.response import Response
from django.irls import path


class Review(models.Model)
    user = models.CharField(max_length=100)
    rating = models.PositiveIntegerField()
    text = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.user} ({self.rating}/5)"


class ReviewSerilaizer(Serilaizers.ModelSerializer):
    class Meta:
        model = Review
        field = ['id', 'user', 'rating', 'text', 'created_at']

    def validate_rating(self,value):
        if not (i <= value <=5):
            raise srializers.ValidationError("Rating must be between 1 and 5.")
        return value


class ReviewCreateView(generics.CreateAPIView):
    queryset = Review.objects.all()
    serailizer_class = ReviewSerilaizer

    def created(self, request, *args. **kwargs):
        serializer = self.get_serializer(data=request.data)
        if serializer.is_valid():
           serializer.save()
           return Response({'message': 'Review created successfully!', 'date': serializer.date},
                            status=stauts.HTTP_201_CREATED) 
        return Response({'errors': serislizers.errors},
                        status=status.HTTP_400_BAD-REQUEST)


urlpatterns = [
    path('review/', ReviewCreateView.as_view(), name='craete=review'),
]                                                  

