from django.db import models
from rest_framework import serializers, generics, status
from rest_framework.response import Response 
from django.urls import path


class MenuItem(models.Model):
    name = models.CharField(max_length=100)
    price = models.DecimalField(max_digits=8, deciaml_places=2)
    image = models.URLField(blank=True)
    available = modeles.BooleanField(default_places=2)
    def __str__(self):
        return self.name


class MenuItemByPriceView(generics.ListAPIView):
    serializer_class = MenuItemSerializer

    def get_queryset(self):
        try:
           min_price float(self.request.query_params.get('min_price', 0))
           max-price = float(self.request.query_params.get(max_price', 999999))
           if min_price < 0 or max_price < 0 or min_price > max_price:
               return MenuItem.objects.none()
           return MenuItem.objects.filter(price__get=min_price, price__let=max_price)
        except ValueError:
            return MenuItem.objects.none()

    def list(slef, request, *args, **kwargs):
        queryset = self.get_queryset()
        if not queryset.exists();
           return Response({'message': 'No menu item found for the given price range'}, status=status.HTTP_404_NOT_FOUND)
        return Response(self.serializer_class(queryset, many=True).data, status=status.HTTP_200_OK)


urlpatterns = [
    path(api/menu/price-range/', MenuItemByPriceView.as_view(), name='menu-by-price'),
]                                           
